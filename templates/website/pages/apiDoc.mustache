<section class="marketing">
  <h1>API documentation</h1>

  <p>
    For now only the read-only part is open, enabling you to get the latest tldrs or to search tldrs by url.
    What's here shouldn't change, but we may add new routes along the way. Still, keep in mind this is experimental
        so don't hesitate to drop us an email at <a href="mailto:hello@tldr.io">hello@tldr.io</a> if you have a question or
    if something doesn't work!
  </p>

  <h2>General information</h2>
  This is a JSON API whose base url is: <code>https://api.tldr.io</code>.<br><br>

  All requests will contain two extra headers to authenticate them:
  <ul>
  <li><code>api-client-name</code>: the name of your application</li>
  <li><code>api-client-key</code>: your secret key</li>
  </ul>

  To request a developer account with your own credentials, <a href="mailto:hello@tldr.io">drop us an email</a>, tell us what you want to use our
  API for and we'll create you an acccount. All unauthenticated requests will be answered with a 401 status code explaining you why the request
  was refused (unknown username or wrong secret key).

  <hr class="soften">

  <h2>Format of the tldr objects</h2>
  <p>For now, almost the data we have about a tldr is in the object you receive. Some of it is useful for you, some probably less so (we use it internally).</p>
  <strong>Useful</strong>
  <ul>
    <li><code>title</code> <em class="muted">(String)</em> The title of the article</li>
    <li><code>summaryBullets</code> <em class="muted">(Array of String)</em> The bullet points composing the summary (maximum: 5)</li>
    <li><code>readCount</code> <em class="muted">(Integer)</em> Number of times the tldr has been read</li>
    <li><code>originalUrl</code> <em class="muted">(String)</em> The url of the page the tldr is the summary of</li>
    <li><code>url</code> <em class="muted">(String)</em> The url above, normalized and used to index the tldr. There is a lot of content that is available
        through different urls (e.g. different utm query strings), we want the same tldr to correspond to all of them. This is not a perfect solution,
        and we improve it regularly. We have plans for an additional system to take care of shitty geo-dependent urls such as blogpost's.</li>
    <li><code>creator</code> <em class="muted">(Object)</em> Public data about the creator of the tldr, with two fields: <code>username</code> and
        <code>twitterHandle</code> (if the user registered it)</li>
    <li><code>imageUrl</code> <em class="muted">(String)</em> Link to the Open Graph image of the corresponding webpage, if there is one</li>
    <li><code>createdAt</code> <em class="muted">(Date)</em> When this tldr was created</li>
    <li><code>updatedAt</code> <em class="muted">(Date)</em> When this tldr was last updated</li>
  </ul><br>

  <strong>Not so useful (if you disagree please tell us!)</strong>
  <ul>
    <li><code>discoverable</code> <em class="muted">(Boolean)</em> Can article be included in results from <code>/tldrs/latest/:number</code>?</li>
    <li><code>versionDisplayed</code> <em class="muted">(Integer)</em> If edits were made, what is the public version. Most of the time at 0 (= 'latest')</li>
    <li><code>slug</code> <em class="muted">(String)</em> Slug of the title used in the website's url for the tldr</li>
    <li><code>history</code> <em class="muted">(ObjectId)</em> Pointer to the tldr's history (not public)</li>
    <li><code>hostname</code> <em class="muted">(String)</em> Hostname for this tldr's corresponding webpage (used to find favicons)</li>

  </ul><br>


  <h2>Routes</h2>
  <strong>GET /tldrs/latest/<em>:number</em></strong><br>
  Get the <code>:number</code> latest tldrs. You can only get between 1 and 10 tldrs.<br><br>

  <strong>GET /tldrs/search?url=<em>:url</em></strong><br>
  Search the summary of the webpage whose url is <code>:url</code>. <code>:url</code>
  should be properly URL-encoded (for example in Javascript with <code>encodeURIComponent</code>).<br>
  A 404 response means there is no tldr for this url.<br><br>

  <strong>POST /tldrs/searchBatch</strong><br>
  Search the tldrs for a batch of urls, not just one as in the route above.<br>
  The body of the request must be a JSON object of the form <code>{ batch: [url1, url2, ...] }</code><br>
  The response will be of the form <code>{ tldrs: [tldr1, tldr2, ...] }.</code><br><br>
  This route can only return up to 50 tldrs, if your batch contains more than 50 urls the response will be a 403 error.

  <hr class="soften">

  <h2>Clients</h2>
  <p>
    This API is very simple but we still made a Javascript client for the browser. You can find it <a href="https://github.com/tldrio/api-js-client" target="_blank">here</a>.
  </p>


</section>
