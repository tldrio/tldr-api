/// Test

var http = require('http');
var bunyan = require('bunyan');
var restify = require('./lib');

var FOO = 'get__/foo';
var server = restify.createServer({
        dtrace: {
                addProbe: function addProbe() {},
                enable: function enable() {},
                fire: function fire() {}
        },
        log: bunyan.createLogger({
                level: process.env.LOG_LEVEL || 'info',
                name: 'foo',
                serializers: restify.bunyan.serializers,
                stream: process.stdout,
        })
/*        router: {
                mount: function (opts) {
                        return opts.method + '::' + opts.path;
                },
                unmount: function (route) {
                        return route;
                },
                find: function (req, res, cb) {
                        return (cb(null, req.method + '::' + req.url));
                }
        }
*/
});

var obj = {
        foo: 'bar'
};

function raw(res) {
        var json = JSON.stringify(obj);
        res.writeHead(200, {
                'content-length': json.length,
                'content-type': 'application/json'
        });
        res.write(json);
        res.end();
}

server.get('/foo/:name',
           function stub(req, res, next) {
                   return next();
           },
           function get(req, res, next) {
                   res.send(202, {name: req.params.name});
                   return (next());
           });

if (process.env.RAW_NODE) {
        server.on('request', function (req, res) {
                return raw(res);
        });
}

server.listen(8080, function () {
        console.log(server.toString())
});

